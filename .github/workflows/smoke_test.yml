name: Prueba de Humo

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v2

      - name: Instalar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Descargar y configurar Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f
          google-chrome --version

      - name: Descargar y configurar ChromeDriver versi贸n 125
        run: |
          wget https://storage.googleapis.com/chrome-for-testing-public/125.0.6422.60/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          chmod +x chromedriver-linux64/chromedriver
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver

      - name: Instalar dependencias
        run: npm install selenium-webdriver

      - name: Verificar versi贸n de ChromeDriver
        run: chromedriver --version

      - name: Verificar instalaci贸n de Chrome
        run: google-chrome --version

      - name: Crear y ejecutar prueba de humo
        run: node smoke_test.js

      - name: Configurar Git
        run: |
            git config --global user.email "kevina.moralesc@uqvirtual.edu.co"
            git config --global user.name "kevinmoralesc"

            - name: Revertir el commit si la prueba falla
              if: ${{ failure() }}
              env:
                GH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: |
                # Obtener el hash del commit a revertir
                COMMIT_HASH=$(git rev-parse HEAD)
                
                # Crear una nueva rama temporal
                git checkout -b temporary-branch
                
                # Revertir el commit
                git revert --no-commit $COMMIT_HASH
                git commit -m "Revertir commit $COMMIT_HASH"
                
                # Forzar el push de la rama temporal, sobrescribiendo la rama principal
                git push --force https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} temporary-branch:main
                
                # Eliminar la rama temporal
                git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} --delete temporary-branch
